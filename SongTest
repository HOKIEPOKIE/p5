package prj5;

import java.util.ArrayList;
import student.TestCase;

/**
 * The test class for the song class.
 * Testing to see if all the methods
 * are implemented correctly
 * 
 * @author Team 54
 * @version 2018.11.15
 *
 */
public class SongTest extends TestCase
{
    private Song song;


    /**
     * Setting the class up for testing the
     * different methods
     */
    public void setUp()
    {
        song = new Song("Fireball", "Pitbull", 2014, "Pop");
    }


    /**
     * Simple getter method to get the song title
     */
    public void testGetTitle()
    {
        assertEquals("Fireball", song.getTitle());
    }


    /**
     * Simple getter method to get the song artist
     */
    public void testGetArtist()
    {
        assertEquals("Pitbull", song.getArtist());
    }


    /**
     * Simple getter method to get the song year
     */
    public void testGetYear()
    {
        assertEquals(2014, song.getYear());
    }


    /**
     * Simple getter method to get the song genre
     */
    public void testGetGenre()
    {
        assertEquals("Pop", song.getGenre());
    }


    /**
     * Converting everything to a string for output
     */
    public void testToString()
    {
        String test = "Title:Fireball, Artist:Pitbull, Year:2014, Genre:Pop";
        assertEquals(test, song.toString());
    }


    /**
     * Testing the add to list method by
     * adding to the list
     */
    public void testAddToList()
    {
        ArrayList<Participant> list = song.getList("heard");
        Participant p = new Participant(MajorEnum.CS, StateEnum.NE,
            HobbyEnum.SPORTS);
        assertEquals(list.size(), 0);
        song.addToList(list, p);
        assertEquals(list.size(), 1);

    }


    /**
     * Testing the getHobbyCount
     */
    public void testGetHobbyCount()
    {
        HobbyEnum sport = HobbyEnum.SPORTS;
        ArrayList<Participant> list = song.getList("heard");
        Participant p = new Participant(MajorEnum.CS, StateEnum.NE,
            HobbyEnum.SPORTS);
        song.addToList(list, p);
        assertEquals(1, song.getHobbyCount(list, sport));

        HobbyEnum read = HobbyEnum.READING;
        assertEquals(0, song.getHobbyCount(list, read));

    }


    /**
     * Testing the getStateCount method
     */
    public void testGetStateCount()
    {
        StateEnum north = StateEnum.NE;
        ArrayList<Participant> list = song.getList("heard");
        Participant p = new Participant(MajorEnum.CS, StateEnum.NE,
            HobbyEnum.SPORTS);
        song.addToList(list, p);
        assertEquals(1, song.getStateCount(list, north));

        StateEnum south = StateEnum.SE;
        assertEquals(0, song.getStateCount(list, south));
    }


    /**
     * Testing the getStateCount method
     */
    public void testGetMajorCount()
    {
        MajorEnum cs = MajorEnum.CS;
        ArrayList<Participant> list = song.getList("heard");
        Participant p = new Participant(MajorEnum.CS, StateEnum.NE,
            HobbyEnum.SPORTS);
        song.addToList(list, p);
        assertEquals(1, song.getMajorCount(list, cs));

        MajorEnum other = MajorEnum.OTHER;
        assertEquals(0, song.getMajorCount(list, other));
    }


    /**
     * Testing the getList method
     */
    public void testGetList()
    {
        String like = "like";
        String noLike = "nolike";
        String heard = "heard";
        String noHeard = "noheard";
        String bad = "list";

        assertNull(song.getList(bad));
        assertNotNull(song.getList(like));
        assertNotNull(song.getList(noLike));
        assertNotNull(song.getList(heard));
        assertNotNull(song.getList(noHeard));

        // asserts Null because no list
    }

}
